name: CI Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-test-verify:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: ocaml_parser
      TEST_INPUT: "let f x y = x + y\nlet main = print_int (f 2 3)"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache OPAM dependencies
        uses: actions/cache@v3
        with:
          path: ~/.opam
          key: opam-${{ runner.os }}-${{ hashFiles('*.opam') }}
          restore-keys: |
            opam-${{ runner.os }}-

      - name: Build Docker image
        run: docker build -t $DOCKER_IMAGE .

      - name: Run tests
        run: docker run --rm $DOCKER_IMAGE

      - name: Verify ASM generation
        run: |
          echo "${{ env.TEST_INPUT }}" > test_input.ml
          docker run --rm -v $(pwd):/app $DOCKER_IMAGE sh -c \
            "cd /app && ./main.byte test_input.ml && \
             test -f output.s && \
             grep -q '_start:' output.s && \
             grep -q 'print_int' output.s"
          cat output.s

      - name: Archive generated ASM
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: generated-asm
          path: output.s